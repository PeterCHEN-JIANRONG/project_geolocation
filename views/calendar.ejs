<!DOCTYPE html>
<html>
  <head>
    <title>Find friend's location</title>
    <meta charset='utf-8' />
    <link rel="stylesheet" type="text/css" href="./css/style.css">    
    <script src="https://apis.google.com/js/platform.js" async defer></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
    <meta name="google-signin-client_id" content="506634394743-lfkonje6ojpeqjpfin97v5umupjon3ed.apps.googleusercontent.com">
  </head>
  <body>
    <button id="signout-button" style="display: block;">Sign Out</button>
    <image id="loading" src="./image/icon.gif"></image>
    <p id="myEvent"></p>
    <!-- <div id="countDown"></div> -->
    <button id="showMap" onclick="showAndHide()" style="display:none">Show and Hide</button>
    <image id="loading2" src="./image/icon.gif" style="display:none"></image>
    <div id="map"></div>
    
    <script type="text/javascript">
      var curpos;
      var map;
      var markers = [];
      var myMarker;
      var temp;
      var evt;
      var myCurpos = [];

      var CLIENT_ID = '506634394743-lfkonje6ojpeqjpfin97v5umupjon3ed.apps.googleusercontent.com';
      var DISCOVERY_DOCS = ["https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest"];
      var SCOPES = "https://www.googleapis.com/auth/calendar.readonly";

      var authorizeButton = document.getElementById('authorize-button');
      var signoutButton = document.getElementById('signout-button');
      
      function handleClientLoad() {
        gapi.load('client:auth2', initClient);
      }

      function initClient() {
        gapi.client.init({
          discoveryDocs: DISCOVERY_DOCS,
          clientId: CLIENT_ID,
          scope: SCOPES
        }).then(function () {
          listUpcomingEvents();
          signoutButton.onclick = handleSignoutClick;
        });
      }
      function handleSignoutClick(event) {
        gapi.auth2.getAuthInstance().signOut();
        gapi.auth2.getAuthInstance().disconnect();
        document.location.href = "/";
      }

      function appendOne(ele,msg) {
        const tmp = document.getElementById(ele);
        if(typeof msg === "string") tmp.innerHTML = msg;
        else{
          tmp.innerHTML += "Upcoming Date</br>"
          for(let key in msg){
            tmp.innerHTML += key + ": " + msg[key] + "<br />"
          }
        }
      }

      function listUpcomingEvents() {
        gapi.client.calendar.events.list({
          'calendarId': 'primary',
          'timeMin': (new Date()).toISOString(),
          'showDeleted': false,
          'singleEvents': true,
          'maxResults': 2,
          'orderBy': 'startTime'
        }).then(function(res) {
          document.getElementById("loading").style.display = "none"
          document.getElementById("loading2").style.display = "block"
          evt = res.result.items[0]
          if(evt && checkTime() < 0){
            evt = res.result.items[1]
          }
          if(evt && checkTime() > 0){
            var temp_attendees = "";
            if(evt.hasOwnProperty("attendees")){
              for(let i = 0;i < evt.attendees.length;i++){
                temp_attendees += (' '+evt.attendees[i].displayName);
              }
              var info = {
                summary: evt.summary,
                start: getDateTime(evt.start.dateTime),
                location: evt.location,
                attendees: temp_attendees,
              }
            }
            else{
              var info = {
                summary: evt.summary,
                start: getDateTime(evt.start.dateTime),
                location: evt.location,
                attendees: gapi.auth2.getAuthInstance().currentUser.Ab.w3.ig,
              }
            }
            temp = {
              id: evt.id,
              location: evt.location,
              self: {
                myName: gapi.auth2.getAuthInstance().currentUser.Ab.w3.ig,
                myEmail: gapi.auth2.getAuthInstance().currentUser.Ab.w3.U3
              }
            }
            console.log(temp)
            appendOne("myEvent",info)
            $.ajax({
              url: "/sendevent",
              type: "post",
              data: temp,
              success: function(result){
                console.log("1 event get")
              }
            })
          }
          else appendOne("myEvent",'No upcoming events found.');
        });
        updatecurpos();
      }
      
      function updatecurpos(){
        if (evt) {
          navigator.geolocation.getCurrentPosition(function (position) {
            curpos = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
            myCurpos.push(curpos);
            console.log(myCurpos)
            if(myCurpos.length === 5){
              var obj = {
                "position" : Avg(myCurpos),
                "id": temp.id,
                "email": temp.self.myEmail
              }
              myCurpos.shift()
              myCurpos.shift()
              $.post("/sendposition",obj,function(data, status){
                console.log("update current success");
              })
            }
          })
        }
      }
      setInterval(updatecurpos,5000)
      var check = setInterval(showMap,5000)
      var despos={lat:0,lng:0}
      function showMap(){
        if (evt && checkTime() <= 1800000) {
          $.ajax({
            url: "/getDestination",
            type: "post",
            data:{"location":temp.location},
            success: function(result){
              despos.lat=result.position.lat
              despos.lng=result.position.lng
              var script = document.createElement('script');
              script.src = 'https://maps.googleapis.com/maps/api/js?key=AIzaSyBtLdMhgwM1UN5bRNt7OT1y5rvUQmhpbPM&callback=initMap';
              var body = document.getElementsByTagName("body")[0];
              body.appendChild(script);
            }
          })
          clearInterval(check)
          document.getElementById("showMap").style.display = "block"
          document.getElementById("loading2").style.display = "none"
        }
        else{
          document.getElementById("loading2").style.display = "none"
          appendOne("map","No date within 30 minutes.</br>I can't show you friends' location.");
        }
      }

      function initMap() {
        map = new google.maps.Map(document.getElementById('map'), {
          zoom: 16
        });
        var image2 = 'https://maps.google.com/mapfiles/ms/icons/green-dot.png'
        
        var destination = new google.maps.Marker({
          position: despos,
          map: map,
          icon:image2,
          label:"目的地",
          opacity: 0.5
        })
        map.setCenter(despos);
        document.getElementById('map').firstChild.style.display = "block"
        countDown()
        getOtherPos();
        addMyMarker();
        setInterval(getOtherPos,10000);
        setInterval(addMyMarker,10000);
      }
        
      function addMyMarker(){
        var image = 'https://maps.google.com/mapfiles/ms/icons/blue-dot.png'       
        if(myMarker) myMarker.setMap(null)
        myMarker = new google.maps.Marker({
          position: curpos,
          map: map,
          icon:image,
          label:"我"
        })
      }
      function getOtherPos(){
        $.ajax({
          url: "/getdata",
          type: "post",
          data:{"event_id":temp.id,
                "email":temp.self.myEmail},
          success: function(result){
            addMarkers(result)
          }
        })
      }
      function addMarkers(allPos){
        for(var i = 0; i < markers.length; i++) {
          for(let j = 0;j < markers[i].length;j++){
            markers[i].setMap(null);
          }
        }
        markers = [];
        for(let i = 0;i < allPos.length;i++){
          markers[i] = [];
          for(let j = 0;j < allPos[i].position.length;j++){
            var marker = new google.maps.Marker({
              position: {lat: allPos[i].position[j].lat,lng: allPos[i].position[j].lng},
              label: allPos[i].name,
              map: map,
              opacity: (j + 1) / allPos[i].position.length
            })
            markers.push(marker);
          }
        }
        console.log("add marker success");
      }
      function getDateTime(time) {
        var date = new Date(time);
        var hour = date.getHours();
        hour = (hour < 10 ? "0" : "") + hour;
        var min  = date.getMinutes();
        min = (min < 10 ? "0" : "") + min;
        var sec  = date.getSeconds();
        sec = (sec < 10 ? "0" : "") + sec;
        var year = date.getFullYear();
        var month = date.getMonth() + 1;
        month = (month < 10 ? "0" : "") + month;
        var day  = date.getDate();
        day = (day < 10 ? "0" : "") + day;
        return year + "-" + month + "-" + day + " " + hour + ":" + min + ":" + sec;
      }
      
      function checkTime(){
        var des = new Date(evt.start.dateTime).getTime()
        var now = Date.now()
        var diff = des - now
        return diff
      }
      
      function countDown(){
        var countDown = setInterval(() => {
          var des = new Date(evt.start.dateTime).getTime()
          var now = Date.now()
          var diff = des - now
          var hours = Math.floor(diff / (1000 * 60 * 60))
          var mins = Math.floor(diff % (1000 * 60 * 60) / (1000 * 60))
          var secs = Math.floor(diff % (1000 * 60) / 1000)
          if(document.getElementById("countDown")){
            var ele = document.getElementById("countDown")
            ele.outerHTML = ""
            delete ele
          }
          var tmp = document.createElement("div")
          tmp.setAttribute("id","countDown")
          tmp.setAttribute("style","margin-top: 1%;text-align: center;position: relative;font-size:180px;opacity:0.5;color:red")
          tmp.innerText = ((hours < 10) ? "0" : "") + hours + ":" + ((mins < 10) ? "0" : "") + mins + ":" + ((secs < 10) ? "0" : "") + secs
          // document.getElementById("countDown").innerText = ((hours < 10) ? "0" : "") + hours + ":" + ((mins < 10) ? "0" : "") + mins + ":" + ((secs < 10) ? "0" : "") + secs
          document.getElementById("map").appendChild(tmp)
          if(diff < 0){
            clearInterval(countDown)
            tmp.innerText = "Expired!"
          }
        } ,1000)
      }
      function showAndHide(){
        const tmp = document.getElementById("map").firstChild
        if(tmp.style.display === "block") tmp.style.display = "none"
        else tmp.style.display = "block"
      }
      function Avg(pos){
        var avglat = 0
        var avglng = 0
        for(let i=0;i<pos.length;i++){
            avglat+= pos[i].lat / pos.length
            avglng+= pos[i].lng / pos.length
        }
        return {lat:avglat,lng:avglng}
      }
    </script>

    <script async defer src="https://apis.google.com/js/api.js"
      onload="this.onload=function(){};handleClientLoad()"
      onreadystatechange="if (this.readyState === 'complete') this.onload()">
    </script>
    <script src="https://apis.google.com/js/platform.js?onload=renderButton" async defer></script>
  </body>
</html>