<!DOCTYPE html>
<html>
  <head>
    <title>Login</title>
    <meta charset='utf-8' />
    <script src="https://apis.google.com/js/platform.js" async defer></script>
    <meta name="google-signin-client_id" content="506634394743-lfkonje6ojpeqjpfin97v5umupjon3ed.apps.googleusercontent.com">
  </head>
  <body>
    <p>Check Event And Location</p>
    <div id="authorize-button" style="display: none"></div>
    <script>
      // function onSuccess(googleUser) {
      //   console.log('Logged in as: ' + googleUser.getBasicProfile().getName());
      // }
      // function onFailure(error) {
      //   console.log(error);
      // }
      function renderButton() {
        gapi.signin2.render('authorize-button', {
          'scope': 'profile email',
          'width': 240,
          'height': 50,
          'longtitle': false,
          'theme': 'dark',
          // 'onsuccess': onSuccess,
          // 'onfailure': onFailure
        });
      }
    </script>
    <!--Add buttons to initiate auth sequence and sign out-->
    <button id="signout-button" style="display: none;">Sign Out</button>

    <script type="text/javascript">

      // Client ID and API key from the Developer Console
      var CLIENT_ID = '506634394743-lfkonje6ojpeqjpfin97v5umupjon3ed.apps.googleusercontent.com';

      // Array of API discovery doc URLs for APIs used by the quickstart
      var DISCOVERY_DOCS = ["https://www.googleapis.com/discovery/v1/apis/calendar/v3/rest"];

      // Authorization scopes required by the API; multiple scopes can be
      // included, separated by spaces.
      var SCOPES = "https://www.googleapis.com/auth/calendar.readonly";

      var authorizeButton = document.getElementById('authorize-button');
      var signoutButton = document.getElementById('signout-button');

      /**
       *  On load, called to load the auth2 library and API client library.
       */
      function handleClientLoad() {
        gapi.load('client:auth2', initClient);
      }
      /**
       *  Initializes the API client library and sets up sign-in state
       *  listeners.
       */
      function initClient() {
        gapi.client.init({
          discoveryDocs: DISCOVERY_DOCS,
          clientId: CLIENT_ID,
          scope: SCOPES,
          ux_mode:"redirect",
          redirect_uri:"https://demo3.104di.clifflu.net/calendar"
        }).then(function () {
          // Listen for sign-in state changes.
          gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);
          // Handle the initial sign-in state.
          updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());
          authorizeButton.onclick = handleAuthClick;
          signoutButton.onclick = handleSignoutClick;
        });
      }

      /**
       *  Called when the signed in status changes, to update the UI
       *  appropriately. After a sign-in, the API is called.
       */
      function updateSigninStatus(isSignedIn) {
        if (isSignedIn) {
          authorizeButton.style.display = 'none';
          signoutButton.style.display = 'block';
        } else {
          authorizeButton.style.display = 'block';
          signoutButton.style.display = 'none';
        }
      }

      /**
       *  Sign in the user upon button click.
       */
      function handleAuthClick(event) {
        gapi.auth2.getAuthInstance().signIn();
        // document.location.href = "/calendar";
      }

      /**
       *  Sign out the user upon button click.
       */
      function handleSignoutClick(event) {
        gapi.auth2.getAuthInstance().signOut();
        gapi.auth2.getAuthInstance().disconnect();
        document.location.href = "/";
      }
    </script>

    <script async defer src="https://apis.google.com/js/api.js"
      onload="this.onload=function(){};handleClientLoad();console.log(this.readyState)"
      onreadystatechange="if (this.readyState === 'complete') {this.onload();console.log(456)}">
    </script>
<script src="https://apis.google.com/js/platform.js?onload=renderButton" async defer></script>
  </body>
</html>